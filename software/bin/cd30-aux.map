Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
                              ./i2c_master.o (__tablejump2__)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                              ./i2c_master.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              ./keypad/keypad.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

timerbase           0x2c              ./timer.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
LOAD ./keypad/keypad.o
LOAD ./i2c_master.o
LOAD ./main.o
LOAD ./timer.o
LOAD ./uart.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libatmega328p.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x904
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.__vector_24
                0x0000000000000068       0xa2 ./i2c_master.o
                0x000000000000010a                . = ALIGN (0x2)
                0x000000000000010a                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000010a        0x0 linker stubs
 *(.trampolines*)
                0x000000000000010a                __trampolines_end = .
 *(.progmem*)
                0x000000000000010a                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000010a                __ctors_start = .
 *(.ctors)
                0x000000000000010a                __ctors_end = .
                0x000000000000010a                __dtors_start = .
 *(.dtors)
                0x000000000000010a                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000010a        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
                0x000000000000010a                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000010a        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000116       0x16 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000116                __do_copy_data
 .init4         0x000000000000012c       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000012c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000013c        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
 *(.init9)
 *(.text)
 .text          0x0000000000000144        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000144                __vector_22
                0x0000000000000144                __vector_1
                0x0000000000000144                __vector_12
                0x0000000000000144                __bad_interrupt
                0x0000000000000144                __vector_6
                0x0000000000000144                __vector_3
                0x0000000000000144                __vector_23
                0x0000000000000144                __vector_25
                0x0000000000000144                __vector_11
                0x0000000000000144                __vector_13
                0x0000000000000144                __vector_17
                0x0000000000000144                __vector_19
                0x0000000000000144                __vector_7
                0x0000000000000144                __vector_5
                0x0000000000000144                __vector_9
                0x0000000000000144                __vector_2
                0x0000000000000144                __vector_21
                0x0000000000000144                __vector_15
                0x0000000000000144                __vector_8
                0x0000000000000144                __vector_10
                0x0000000000000144                __vector_16
                0x0000000000000144                __vector_20
 .text          0x0000000000000148        0x0 ./keypad/keypad.o
 .text          0x0000000000000148        0x0 ./i2c_master.o
 .text          0x0000000000000148        0x0 ./main.o
 .text          0x0000000000000148        0x0 ./timer.o
 .text          0x0000000000000148        0x0 ./uart.o
 .text          0x0000000000000148        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000148        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text          0x0000000000000148        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000148        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000148                . = ALIGN (0x2)
 *(.text.*)
 .text.keypad_init
                0x0000000000000148        0xe ./keypad/keypad.o
                0x0000000000000148                keypad_init
 .text.keypad_reset_input
                0x0000000000000156        0x6 ./keypad/keypad.o
                0x0000000000000156                keypad_reset_input
 .text.keypad_set_input
                0x000000000000015c       0x12 ./keypad/keypad.o
                0x000000000000015c                keypad_set_input
 .text.keypad_get_input
                0x000000000000016e       0x12 ./keypad/keypad.o
                0x000000000000016e                keypad_get_input
 .text.keypad_clicked
                0x0000000000000180       0x12 ./keypad/keypad.o
                0x0000000000000180                keypad_clicked
 .text.keypad_periodic
                0x0000000000000192       0x62 ./keypad/keypad.o
                0x0000000000000192                keypad_periodic
 .text.i2c_init
                0x00000000000001f4       0x1c ./i2c_master.o
                0x00000000000001f4                i2c_init
 .text.i2c_busy
                0x0000000000000210        0x8 ./i2c_master.o
                0x0000000000000210                i2c_busy
 .text.i2c_get_state_info
                0x0000000000000218        0x6 ./i2c_master.o
                0x0000000000000218                i2c_get_state_info
 .text.i2c_transfer_set_data
                0x000000000000021e       0x46 ./i2c_master.o
                0x000000000000021e                i2c_transfer_set_data
 .text.i2c_transfer_start
                0x0000000000000264       0x50 ./i2c_master.o
                0x0000000000000264                i2c_transfer_start
 .text.i2c_transfer_successful
                0x00000000000002b4       0x4e ./i2c_master.o
                0x00000000000002b4                i2c_transfer_successful
 .text.__vector_24
                0x0000000000000302      0x114 ./i2c_master.o
                0x0000000000000302                __vector_24
 .text.i2c_detection.part.0
                0x0000000000000416       0x16 ./main.o
 .text.status_led
                0x000000000000042c       0x10 ./main.o
 .text.__vector_14
                0x000000000000043c       0x4a ./main.o
                0x000000000000043c                __vector_14
 .text.__vector_4
                0x0000000000000486       0x5c ./main.o
                0x0000000000000486                __vector_4
 .text.__vector_default
                0x00000000000004e2        0xc ./main.o
                0x00000000000004e2                __vector_default
 .text.startup.main
                0x00000000000004ee      0x2aa ./main.o
                0x00000000000004ee                main
 .text.timeout  0x0000000000000798       0x8e ./timer.o
                0x0000000000000798                timeout
 .text.uart_putchar
                0x0000000000000826        0xe ./uart.o
                0x0000000000000826                uart_putchar
 .text.uart_getchar
                0x0000000000000834        0xe ./uart.o
                0x0000000000000834                uart_getchar
 .text.uart_init
                0x0000000000000842       0x34 ./uart.o
                0x0000000000000842                uart_init
 .text.__vector_18
                0x0000000000000876       0x56 ./uart.o
                0x0000000000000876                __vector_18
 .text.uart_callback
                0x00000000000008cc        0xa ./uart.o
                0x00000000000008cc                uart_callback
 .text.uart_putstring
                0x00000000000008d6       0x1e ./uart.o
                0x00000000000008d6                uart_putstring
 .text.libgcc.mul
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc   0x00000000000008f4        0xc /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
                0x00000000000008f4                __tablejump2__
 .text.libgcc.prologue
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000900                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x0000000000000900                exit
                0x0000000000000900                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000900        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000904                _etext = .

.data           0x0000000000800100       0x1e load address 0x0000000000000904
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
 .data          0x0000000000800100        0x0 ./keypad/keypad.o
 .data          0x0000000000800100        0x0 ./i2c_master.o
 .data          0x0000000000800100        0x0 ./main.o
 .data          0x0000000000800100        0x0 ./timer.o
 .data          0x0000000000800100        0x0 ./uart.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.i2c_state
                0x0000000000800100        0x1 ./i2c_master.o
 .data.uart_input
                0x0000000000800101        0xe ./uart.o
                0x0000000000800101                uart_input
 .data.uart_output
                0x000000000080010f        0xe ./uart.o
                0x000000000080010f                uart_output
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080011e                . = ALIGN (0x2)
 *fill*         0x000000000080011d        0x1 
                0x000000000080011e                _edata = .
                0x000000000080011e                PROVIDE (__data_end, .)

.bss            0x000000000080011e       0x3f
                0x000000000080011e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080011e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
 .bss           0x000000000080011e        0x0 ./keypad/keypad.o
 .bss           0x000000000080011e        0x0 ./i2c_master.o
 .bss           0x000000000080011e        0x0 ./main.o
 .bss           0x000000000080011e        0x0 ./timer.o
 .bss           0x000000000080011e        0x0 ./uart.o
 .bss           0x000000000080011e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080011e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .bss           0x000000000080011e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080011e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.keypad    0x000000000080011e        0x4 ./keypad/keypad.o
 .bss.i2c_buf_pos.1692
                0x0000000000800122        0x1 ./i2c_master.o
 .bss.i2c_successful_operation
                0x0000000000800123        0x1 ./i2c_master.o
 .bss.i2c_xfer_size
                0x0000000000800124        0x1 ./i2c_master.o
 .bss.i2c_xfer_buffer
                0x0000000000800125        0x2 ./i2c_master.o
 .bss.error_counter
                0x0000000000800127        0x2 ./i2c_master.o
                0x0000000000800127                error_counter
 .bss.new       0x0000000000800129        0x1 ./main.o
 .bss.current   0x000000000080012a        0x1 ./main.o
 .bss.milliseconds_since_boot
                0x000000000080012b        0x4 ./timer.o
                0x000000000080012b                milliseconds_since_boot
 .bss.uart_cb   0x000000000080012f        0x2 ./uart.o
 *(COMMON)
 COMMON         0x0000000000800131       0x2c ./timer.o
                0x0000000000800131                timerbase
                0x000000000080015d                PROVIDE (__bss_end, .)
                0x0000000000000904                __data_load_start = LOADADDR (.data)
                0x0000000000000922                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080015d        0x0
                0x000000000080015d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080015d                PROVIDE (__noinit_end, .)
                0x000000000080015d                _end = .
                0x000000000080015d                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x22ec
 *(.stab)
 .stab          0x0000000000000000      0x66c ./keypad/keypad.o
 .stab          0x000000000000066c      0x8f4 ./i2c_master.o
                                        0xa68 (size before relaxing)
 .stab          0x0000000000000f60      0xab0 ./main.o
                                        0xcc0 (size before relaxing)
 .stab          0x0000000000001a10      0x420 ./timer.o
                                        0x618 (size before relaxing)
 .stab          0x0000000000001e30      0x4bc ./uart.o
                                        0x714 (size before relaxing)

.stabstr        0x0000000000000000     0x1600
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1600 ./keypad/keypad.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./keypad/keypad.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./i2c_master.o
 .comment       0x0000000000000011       0x12 ./main.o
 .comment       0x0000000000000011       0x12 ./timer.o
 .comment       0x0000000000000011       0x12 ./uart.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(cd30-aux.elf elf32-avr)
LOAD linker stubs
